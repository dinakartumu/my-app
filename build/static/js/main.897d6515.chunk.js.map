{"version":3,"sources":["logo.svg","TinyEditor.js","App.js","reportWebVitals.js","index.js"],"names":["App","editorRef","useRef","apiKey","onInit","evt","editor","current","initialValue","init","height","menubar","plugins","toolbar","content_style","onClick","console","log","getContent","className","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"qMAAe,I,mBCGA,SAASA,IACtB,IAAMC,EAAYC,iBAAO,MAMzB,OACE,qCACE,cAAC,IAAD,CACEC,OAAO,mDACPC,OAAQ,SAACC,EAAKC,GAAN,OAAkBL,EAAUM,QAAUD,GAC9CE,aAAa,oDACbC,KAAM,CACJC,OAAQ,IACRC,SAAS,EACTC,QAAS,CACP,iEACA,6CACA,wDAEFC,QACE,0JAIFC,cACE,qEAEH,IACH,wBAAQC,QA5BA,WACNd,EAAUM,SACZS,QAAQC,IAAIhB,EAAUM,QAAQW,eA0B9B,kCAAoD,OCrB3ClB,MARf,WACE,OACE,qBAAKmB,UAAU,MAAf,SACE,cAAC,EAAD,OCKSC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.897d6515.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React, { useRef } from 'react';\nimport { Editor } from '@tinymce/tinymce-react';\n\nexport default function App() {\n  const editorRef = useRef(null);\n  const log = () => {\n    if (editorRef.current) {\n      console.log(editorRef.current.getContent());\n    }\n  };\n  return (\n    <>\n      <Editor\n        apiKey=\"bptkqle7qrf1cwjvfdu7u8lte0rv2jn9wjaxzm43zru6083z\"\n        onInit={(evt, editor) => (editorRef.current = editor)}\n        initialValue=\"<p>This is the initial content of the editor.</p>\"\n        init={{\n          height: 500,\n          menubar: false,\n          plugins: [\n            'advlist autolink lists link image charmap print preview anchor',\n            'searchreplace visualblocks code fullscreen',\n            'insertdatetime media table paste code help wordcount',\n          ],\n          toolbar:\n            'undo redo | formatselect | ' +\n            'bold italic backcolor | alignleft aligncenter ' +\n            'alignright alignjustify | bullist numlist outdent indent | ' +\n            'removeformat | help',\n          content_style:\n            'body { font-family:Helvetica,Arial,sans-serif; font-size:14px }',\n        }}\n      />{' '}\n      <button onClick={log}> Log editor content </button>{' '}\n    </>\n  );\n}\n","import logo from './logo.svg';\nimport './App.css';\nimport TinyEditor from './TinyEditor';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <TinyEditor />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}